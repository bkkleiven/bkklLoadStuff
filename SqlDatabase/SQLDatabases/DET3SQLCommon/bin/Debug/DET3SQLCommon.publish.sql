/*
Deployment script for DET3SQLCommon

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DET3SQLCommon"
:setvar DefaultFilePrefix "DET3SQLCommon"
:setvar DefaultDataPath "C:\Users\bkkl\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0"
:setvar DefaultLogPath "C:\Users\bkkl\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\v11.0"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Notifications]...';


GO
CREATE TABLE [dbo].[Notifications] (
    [NotifNo]                 NVARCHAR (12)   NOT NULL,
    [DateLastChange]          DATETIME2 (7)   NOT NULL,
    [NotificationType]        NCHAR (2)       NULL,
    [PlanningPlant]           NVARCHAR (4)    NULL,
    [Iwerk]                   NCHAR (4)       NULL,
    [IwerkTxt]                NVARCHAR (30)   NULL,
    [Swerk]                   NCHAR (4)       NULL,
    [SwerkTxt]                NVARCHAR (30)   NULL,
    [Qmart]                   NCHAR (2)       NULL,
    [Aedat]                   DATETIME2 (7)   NULL,
    [Aezeit]                  NVARCHAR (12)   NULL,
    [Auswk]                   NCHAR (1)       NULL,
    [Auswkt]                  NVARCHAR (40)   NULL,
    [Ltrmn]                   DATETIME2 (7)   NULL,
    [Qmdat]                   DATETIME2 (7)   NULL,
    [Mzeit]                   NVARCHAR (12)   NULL,
    [Erdat]                   DATETIME2 (7)   NULL,
    [Erzeit]                  NVARCHAR (12)   NULL,
    [Qmdab]                   DATETIME2 (7)   NULL,
    [Qmzab]                   NVARCHAR (12)   NULL,
    [Bezdt]                   DATETIME2 (7)   NULL,
    [Bezur]                   NVARCHAR (12)   NULL,
    [Aufnr]                   NVARCHAR (12)   NULL,
    [Priok]                   NCHAR (1)       NULL,
    [Qmtxt]                   NVARCHAR (40)   NULL,
    [Ingrp]                   NCHAR (3)       NULL,
    [Arbpl]                   NVARCHAR (8)    NULL,
    [Arbplwerk]               NCHAR (4)       NULL,
    [ArbplwerkTxt]            NVARCHAR (30)   NULL,
    [Msaus]                   NVARCHAR (5)    NULL,
    [Auszt]                   FLOAT (53)      NULL,
    [Ausvn]                   DATETIME2 (7)   NULL,
    [Auztv]                   NVARCHAR (12)   NULL,
    [Ausbs]                   DATETIME2 (7)   NULL,
    [Auztb]                   NVARCHAR (12)   NULL,
    [Zzcritfail]              NVARCHAR (1)    NULL,
    [Innam]                   NVARCHAR (18)   NULL,
    [Longtxt]                 TEXT            NULL,
    [Actvtxt]                 TEXT            NULL,
    [Fecod]                   NCHAR (4)       NULL,
    [FecodTxt]                NVARCHAR (80)   NULL,
    [Urcod]                   NCHAR (4)       NULL,
    [UrcodTxt]                NVARCHAR (80)   NULL,
    [Oteil]                   NCHAR (4)       NULL,
    [OteilTxt]                NVARCHAR (80)   NULL,
    [Sysstatus]               NVARCHAR (40)   NULL,
    [Userstatus]              NVARCHAR (40)   NULL,
    [Beber]                   NCHAR (3)       NULL,
    [Tplnr]                   NVARCHAR (40)   NULL,
    [Pltxt]                   NVARCHAR (40)   NULL,
    [Stort]                   NVARCHAR (10)   NULL,
    [Abckz]                   NCHAR (1)       NULL,
    [Eqart]                   NVARCHAR (10)   NULL,
    [EqartTxt]                NVARCHAR (20)   NULL,
    [Rbnr]                    NVARCHAR (9)    NULL,
    [Rbnrx]                   NVARCHAR (30)   NULL,
    [CritCriticality]         NVARCHAR (30)   NULL,
    [ClassificationPlant]     NVARCHAR (30)   NULL,
    [CritMainFunction]        NVARCHAR (30)   NULL,
    [CritSubFunction]         NVARCHAR (30)   NULL,
    [CritRedundancy]          NVARCHAR (30)   NULL,
    [CritSafety]              NVARCHAR (30)   NULL,
    [CritProduction]          NVARCHAR (30)   NULL,
    [CritCost]                NVARCHAR (30)   NULL,
    [McConceptNoConcern]      NVARCHAR (30)   NULL,
    [McConceptNoPlant]        NVARCHAR (30)   NULL,
    [McRepairStrategy]        NVARCHAR (30)   NULL,
    [McCriticalSpares]        NVARCHAR (30)   NULL,
    [McSparePartRequirement]  NVARCHAR (30)   NULL,
    [ControlClass]            NVARCHAR (30)   NULL,
    [CritFailHse]             NVARCHAR (30)   NULL,
    [CritContainment]         NVARCHAR (30)   NULL,
    [CritContainmentCategory] NVARCHAR (30)   NULL,
    [Equnr]                   NVARCHAR (18)   NULL,
    [Eqkt]                    NVARCHAR (40)   NULL,
    [Mngrps]                  NVARCHAR (255)  NULL,
    [Mncods]                  NVARCHAR (255)  NULL,
    [MngrpsTxt]               NVARCHAR (1024) NULL,
    [MncodsTxt]               NVARCHAR (1024) NULL,
    CONSTRAINT [PK_Notifications] PRIMARY KEY CLUSTERED ([NotifNo] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[Notifications_Staging]...';


GO
CREATE TABLE [dbo].[Notifications_Staging] (
    [NotifNo]                 NVARCHAR (12)   NOT NULL,
    [DateLastChange]          NVARCHAR (40)   NOT NULL,
    [NotificationType]        NCHAR (2)       NULL,
    [PlanningPlant]           NVARCHAR (4)    NULL,
    [Iwerk]                   NCHAR (4)       NULL,
    [IwerkTxt]                NVARCHAR (30)   NULL,
    [Swerk]                   NCHAR (4)       NULL,
    [SwerkTxt]                NVARCHAR (30)   NULL,
    [Qmart]                   NCHAR (2)       NULL,
    [Aedat]                   NVARCHAR (40)   NULL,
    [Aezeit]                  NVARCHAR (12)   NULL,
    [Auswk]                   NCHAR (1)       NULL,
    [Auswkt]                  NVARCHAR (40)   NULL,
    [Ltrmn]                   NVARCHAR (40)   NULL,
    [Qmdat]                   NVARCHAR (40)   NULL,
    [Mzeit]                   NVARCHAR (12)   NULL,
    [Erdat]                   NVARCHAR (40)   NULL,
    [Erzeit]                  NVARCHAR (12)   NULL,
    [Qmdab]                   NVARCHAR (40)   NULL,
    [Qmzab]                   NVARCHAR (12)   NULL,
    [Bezdt]                   NVARCHAR (40)   NULL,
    [Bezur]                   NVARCHAR (12)   NULL,
    [Aufnr]                   NVARCHAR (12)   NULL,
    [Priok]                   NCHAR (1)       NULL,
    [Qmtxt]                   NVARCHAR (40)   NULL,
    [Ingrp]                   NCHAR (3)       NULL,
    [Arbpl]                   NVARCHAR (8)    NULL,
    [Arbplwerk]               NCHAR (4)       NULL,
    [ArbplwerkTxt]            NVARCHAR (30)   NULL,
    [Msaus]                   NVARCHAR (5)    NULL,
    [Auszt]                   FLOAT (53)      NULL,
    [Ausvn]                   NVARCHAR (40)   NULL,
    [Auztv]                   NVARCHAR (12)   NULL,
    [Ausbs]                   NVARCHAR (40)   NULL,
    [Auztb]                   NVARCHAR (12)   NULL,
    [Zzcritfail]              NVARCHAR (1)    NULL,
    [Innam]                   NVARCHAR (18)   NULL,
    [Longtxt]                 TEXT            NULL,
    [Actvtxt]                 TEXT            NULL,
    [Fecod]                   NCHAR (4)       NULL,
    [FecodTxt]                NVARCHAR (80)   NULL,
    [Urcod]                   NCHAR (4)       NULL,
    [UrcodTxt]                NVARCHAR (80)   NULL,
    [Oteil]                   NCHAR (4)       NULL,
    [OteilTxt]                NVARCHAR (80)   NULL,
    [Sysstatus]               NVARCHAR (40)   NULL,
    [Userstatus]              NVARCHAR (40)   NULL,
    [Beber]                   NCHAR (3)       NULL,
    [Tplnr]                   NVARCHAR (40)   NULL,
    [Pltxt]                   NVARCHAR (40)   NULL,
    [Stort]                   NVARCHAR (10)   NULL,
    [Abckz]                   NCHAR (1)       NULL,
    [Eqart]                   NVARCHAR (10)   NULL,
    [EqartTxt]                NVARCHAR (20)   NULL,
    [Rbnr]                    NVARCHAR (9)    NULL,
    [Rbnrx]                   NVARCHAR (30)   NULL,
    [CritCriticality]         NVARCHAR (30)   NULL,
    [ClassificationPlant]     NVARCHAR (30)   NULL,
    [CritMainFunction]        NVARCHAR (30)   NULL,
    [CritSubFunction]         NVARCHAR (30)   NULL,
    [CritRedundancy]          NVARCHAR (30)   NULL,
    [CritSafety]              NVARCHAR (30)   NULL,
    [CritProduction]          NVARCHAR (30)   NULL,
    [CritCost]                NVARCHAR (30)   NULL,
    [McConceptNoConcern]      NVARCHAR (30)   NULL,
    [McConceptNoPlant]        NVARCHAR (30)   NULL,
    [McRepairStrategy]        NVARCHAR (30)   NULL,
    [McCriticalSpares]        NVARCHAR (30)   NULL,
    [McSparePartRequirement]  NVARCHAR (30)   NULL,
    [ControlClass]            NVARCHAR (30)   NULL,
    [CritFailHse]             NVARCHAR (30)   NULL,
    [CritContainment]         NVARCHAR (30)   NULL,
    [CritContainmentCategory] NVARCHAR (30)   NULL,
    [Equnr]                   NVARCHAR (18)   NULL,
    [Eqkt]                    NVARCHAR (40)   NULL,
    [Mngrps]                  NVARCHAR (255)  NULL,
    [Mncods]                  NVARCHAR (255)  NULL,
    [MngrpsTxt]               NVARCHAR (1024) NULL,
    [MncodsTxt]               NVARCHAR (1024) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[process_notifications_staging_table]...';


GO
-- =============================================
-- Author 		: Shahila Retnadhas
-- Create Date	: 10.08.2018
-- Description	: Upsert notification data from 
--                staging to primary tables
-- =============================================
CREATE PROCEDURE [dbo].[process_notifications_staging_table]
AS
BEGIN

	SET NOCOUNT ON
	
	DELETE DUP_REC FROM ( SELECT *, RN=ROW_NUMBER() OVER (PARTITION BY NOTIFNO ORDER BY [DateLastChange] DESC)
							FROM [dbo].[Notifications_Staging] 
						) DUP_REC WHERE RN > 1

	-- DECLARE a temp table to hold all new or updated Notifications id's (NotifNo)
	DECLARE @Notifications TABLE (NotifNo nvarchar(12))

	INSERT INTO @Notifications
	SELECT DISTINCT [NotifNo] FROM [dbo].[Notifications_Staging]

	/*  Remove records that has an update */
	DELETE FROM [dbo].[Notifications] WHERE [NotifNo] IN (SELECT [NotifNo] FROM @Notifications)
	
	/*  Insert all records into the notification operation table */
INSERT INTO [dbo].[Notifications]
	SELECT [NotifNo]
	  ,CAST(DATEADD(ms, CONVERT(bigint, SUBSTRING([DateLastChange],7, PATINDEX('%)%', [DateLastChange]) - 7))%1000, DATEADD(SS, (CONVERT(bigint, SUBSTRING([DateLastChange],7, PATINDEX('%)%', [DateLastChange]) - 7))/1000)%3600, DATEADD(hh, CONVERT(bigint, SUBSTRING([DateLastChange],7, PATINDEX('%)%', [DateLastChange]) - 7))/3600000, '19700101' ) )) as DateTime2)  as [DateLastChange]	
      ,[NotificationType]
      ,[PlanningPlant]
      ,[Iwerk]
      ,[IwerkTxt]
      ,[Swerk]
      ,[SwerkTxt]
      ,[Qmart]
	  ,CAST(CASE WHEN ([Aedat] IS NULL OR TRIM([Aedat]) = '') THEN NULL
				 WHEN ([Aezeit] IS NULL OR TRIM([Aezeit]) = '' OR SUBSTRING([Aezeit],1,4) = 'PT24' OR SUBSTRING([Aezeit],1,3) = 'PT ' OR SUBSTRING([Aezeit],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Aedat],7, PATINDEX('%)%', [Aedat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Aedat],7, PATINDEX('%)%', [Aedat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Aezeit],3,2) + ':' + SUBSTRING([Aezeit],6,2) + ':' + SUBSTRING([Aezeit],9,2)
			END AS DateTime2) AS [Aedat]
	  ,[Aezeit]
      ,[Auswk]
      ,[Auswkt]
	  ,CAST(DATEADD(ms, CONVERT(bigint, SUBSTRING([Ltrmn],7, PATINDEX('%)%', [Ltrmn]) - 7))%1000, DATEADD(SS, (CONVERT(bigint, SUBSTRING([Ltrmn],7, PATINDEX('%)%', [Ltrmn]) - 7))/1000)%3600, DATEADD(hh, CONVERT(bigint, SUBSTRING([Ltrmn],7, PATINDEX('%)%', [Ltrmn]) - 7))/3600000, '19700101' ) )) as DateTime2)  as [Ltrmn]
	  ,CAST(CASE WHEN ([Qmdat] IS NULL OR TRIM([Qmdat]) = '') THEN NULL
				 WHEN ([Mzeit] IS NULL OR TRIM([Mzeit]) = '' OR SUBSTRING([Mzeit],1,4) = 'PT24' OR SUBSTRING([Mzeit],1,3) = 'PT ' OR SUBSTRING([Mzeit],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Qmdat],7, PATINDEX('%)%', [Qmdat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Qmdat],7, PATINDEX('%)%', [Qmdat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Mzeit],3,2) + ':' + SUBSTRING([Mzeit],6,2) + ':' + SUBSTRING([Mzeit],9,2)
			END AS DateTime2) AS [Qmdat]
      ,[Mzeit]
	  ,CAST(CASE WHEN ([Erdat] IS NULL OR TRIM([Erdat]) = '') THEN NULL
				 WHEN ([Erzeit] IS NULL OR TRIM([Erzeit]) = '' OR SUBSTRING([Erzeit],1,4) = 'PT24' OR SUBSTRING([Erzeit],1,3) = 'PT ' OR SUBSTRING([Erzeit],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Erdat],7, PATINDEX('%)%', [Erdat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Erdat],7, PATINDEX('%)%', [Erdat]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Erzeit],3,2) + ':' + SUBSTRING([Erzeit],6,2) + ':' + SUBSTRING([Erzeit],9,2)
			END AS DateTime2) AS [Erdat]	  
      ,[Erzeit]
	  ,CAST(CASE WHEN ([Qmdab] IS NULL OR TRIM([Qmdab]) = '') THEN NULL
				 WHEN ([Qmzab] IS NULL OR TRIM([Qmzab]) = '' OR SUBSTRING([Qmzab],1,4) = 'PT24' OR SUBSTRING([Qmzab],1,3) = 'PT ' OR SUBSTRING([Qmzab],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Qmdab],7, PATINDEX('%)%', [Qmdab]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Qmdab],7, PATINDEX('%)%', [Qmdab]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Qmzab],3,2) + ':' + SUBSTRING([Qmzab],6,2) + ':' + SUBSTRING([Qmzab],9,2)
			END AS DateTime2) AS [Qmdab]	  
      ,[Qmzab]
	  ,CAST(CASE WHEN ([Bezdt] IS NULL OR TRIM([Bezdt]) = '') THEN NULL
				 WHEN ([Bezur] IS NULL OR TRIM([Bezur]) = '' OR SUBSTRING([Bezur],1,4) = 'PT24' OR SUBSTRING([Bezur],1,3) = 'PT ' OR SUBSTRING([Bezur],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Bezdt],7, PATINDEX('%)%', [Bezdt]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Bezdt],7, PATINDEX('%)%', [Bezdt]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Bezur],3,2) + ':' + SUBSTRING([Bezur],6,2) + ':' + SUBSTRING([Bezur],9,2)
			END AS DateTime2) AS [Bezdt]	  
      ,[Bezur]
      ,SUBSTRING([Aufnr], PATINDEX('%[^0]%', [Aufnr]), LEN([Aufnr])) AS [Aufnr]
      ,[Priok]
      ,[Qmtxt]
      ,[Ingrp]
      ,[Arbpl]
      ,[Arbplwerk]
      ,[ArbplwerkTxt]
      ,[Msaus]
      ,[Auszt]
	  ,CAST(CASE WHEN ([Ausvn] IS NULL OR TRIM([Ausvn]) = '') THEN NULL
				 WHEN ([Auztv] IS NULL OR TRIM([Auztv]) = '' OR SUBSTRING([Auztv],1,4) = 'PT24' OR SUBSTRING([Auztv],1,3) = 'PT ' OR SUBSTRING([Auztv],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Ausvn],7, PATINDEX('%)%', [Ausvn]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Ausvn],7, PATINDEX('%)%', [Ausvn]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) +' ' + SUBSTRING([Auztv],3,2) + ':' + SUBSTRING([Auztv],6,2) + ':' + SUBSTRING([Auztv],9,2)
			END AS DateTime2) AS [Ausvn]
      ,[Auztv]
	  ,CAST(CASE WHEN ([Ausbs] IS NULL OR TRIM(Ausbs) = '') THEN NULL
				 WHEN ([Auztb] IS NULL OR TRIM([Auztb]) = '' OR SUBSTRING([Auztb],1,4) = 'PT24' OR SUBSTRING([Auztb],1,3) = 'PT ' OR SUBSTRING([Auztb],1,2) != 'PT') THEN CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Ausbs],7, PATINDEX('%)%', [Ausbs]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' 00:00:00'
				 ELSE CAST(CAST(DATEADD(hh, CONVERT(bigint, SUBSTRING([Ausbs],7, PATINDEX('%)%', [Ausbs]) - 7))/3600000, '19700101' ) as Date) as varchar(10)) + ' ' + SUBSTRING([Auztb],3,2) + ':' + SUBSTRING([Auztb],6,2) + ':' + SUBSTRING([Auztb],9,2)
			END AS DateTime2) AS [Ausbs]
      ,[Auztb]
      ,[Zzcritfail]
      ,[Innam]
      ,[Longtxt]
      ,[Actvtxt]
      ,[Fecod]
      ,[FecodTxt]
      ,[Urcod]
      ,[UrcodTxt]
      ,[Oteil]
      ,[OteilTxt]
      ,[Sysstatus]
      ,[Userstatus]
      ,[Beber]
      ,[Tplnr]
      ,[Pltxt]
      ,[Stort]
      ,[Abckz]
      ,[Eqart]
      ,[EqartTxt]
      ,[Rbnr]
      ,[Rbnrx]
      ,[CritCriticality]
      ,[ClassificationPlant]
      ,[CritMainFunction]
      ,[CritSubFunction]
      ,[CritRedundancy]
      ,[CritSafety]
      ,[CritProduction]
      ,[CritCost]
      ,[McConceptNoConcern]
      ,[McConceptNoPlant]
      ,[McRepairStrategy]
      ,[McCriticalSpares]
      ,[McSparePartRequirement]
      ,[ControlClass]
      ,[CritFailHse]
      ,[CritContainment]
      ,[CritContainmentCategory]
      ,[Equnr]
      ,[Eqkt]
      ,[Mngrps]
      ,[Mncods]
      ,[MngrpsTxt]
      ,[MncodsTxt]
	FROM [dbo].[Notifications_Staging]
    
END
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
